server:
  port: 0
spring:
  application:
    name: account
  #Database
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql jar包版本5.X用没有CJ的 com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.1.115:13306/zc_test?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false
    username: shuma
    password: shuma123
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      connection-test-query: SELECT 1
      max-lifetime: 1800000
      connection-timeout: 30000
      pool-name: DatebookHikariCP
  #JPA
  jpa:
    database: MYSQL
    hibernate:
      ddl-auto: update
      naming:
        #  Hibernate到5.1废除了
        #  strategy: org.hibernate.cfg.ImprovedNamingStrategy
        #在进行领域映射时,首字母小写，大写字母变为下划线加小写
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        #不做修改，直接映射org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect  #不加这句则默认为myisam引擎,myisam不能加索引
    show-sql: true
    open-in-view: true
  #JSON
  jackson:
    #时区
    time-zone: GMT+8
    #时间格式
    date-format: yyyy-MM-dd HH:mm:ss
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true #IP地址
    #    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
    leaseRenewalIntervalInSeconds:  5 # 心跳间隔，5秒
    leaseExpirationDurationInSeconds: 10  # 没有心跳的淘汰时间，10秒
    #    Eureka 的元数据
    metadata-map:
      zc-data: Current services are account services  # 不会影响客户端
      zone: ABD               # Eureka可以理解的元数据，可以影响客户端
  #    appname: AAAAA            # 填坑 Swagger：配置和spring.application.name 冲突
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/ #应用的主机名称
feign:
  hystrix:
    enabled: true #全局禁用或开启 feign默认hystrix是false不开启的
  # 配置属性实现日志级别
  client:
    config:
      #如果实现细粒度，就是调用的微服务名称,如果是全局配置就是default
      default:
        loggerLevel: FULL
  httpclient:
    enabled: true
    max-connections: 200
    max-connections-per-route: 50

# 显示所有健康状态
management:
  endpoint.health.show-details: always
  endpoints.web.exposure.include: "*"

# Ribbon 负载均衡算法-细粒度配置
goods:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 配置文件配置负载均衡算法-我这里使用的是自定义的Ribbon的负载均衡算法，优先级：配置（不会影响其他服务）>(大于) 硬编码（类得写在SpringBoot启动类包外，不然会影响其他服务），默认
# Ribbon饥饿加载
ribbon:
  eager-load:
    enabled: true
    clients: goods,order

logging:
  level:
    com.happyloves.zc: DEBUG
#    com:
#      happyloves:
#        zc:
#          service:
#            account:
#              openfeign:
#                GoodsAPI: DEBUG